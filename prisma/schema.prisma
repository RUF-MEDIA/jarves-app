generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
  
}

model Unternehmen {
  id                         String                    @id @default(uuid())
  betreuerId                 String?
  name                       String                    @default("")
  status                     Status                    @default(inaktiv)
  kategorie                  Int?
  strasse                    String                    @default("")
  postleitzahl               String                    @default("")
  stadt                      String                    @default("")
  umsatzsteuerId             String?                   @default("")
  standort                   Standort?                  @default(Zentrale)
  unternehmensverknuepfungZu String[]                  // Geändert zu String[]
  homepage                   String?
  jobsite                    String?
  linkedin                   String?
  xing                       String?
  zentraleMail               String?
  zentralTelefon             String?
  vermittlungsprovision      String?
  usbBeschreibung            String?
  interneNotizen             String?
  erstelltVonId              String?
  erstelltAm                 DateTime                  @default(now())
  letzteAenderungVonId       String?
  letzteAenderungAm          DateTime?                 @updatedAt
  autogeneratedNr            Int                       @default(autoincrement())
  unternehmensverknuepfung   Unternehmensverknuepfung?
  auftragsuebersicht         Auftrag[]
  dokumenteVertraege         Dokument[]
  sales                      Sales[]
  todos                      Todo[]
  betreuer                   User?                     @relation(fields: [betreuerId], references: [id])
  erstelltVon                User?                     @relation("ErstelltVon", fields: [erstelltVonId], references: [id])
  letzteAenderungVon         User?                     @relation("LetzteAenderungVon", fields: [letzteAenderungVonId], references: [id])
  verknuepfteUnternehmen     Unternehmen[]             @relation("UnternehmensVerknuepfung")
  verknuepftMit              Unternehmen[]             @relation("UnternehmensVerknuepfung")
  ansprechpartner             Ansprechpartner[]         @relation("AnsprechpartnerToUnternehmen")

  @@schema("public")
}

model User {
  id                        String            @id @default(uuid())
  vorname                   String            @default("")
  name                      String            @default("")
  email                     String?            @unique @default("")
  password                  String           
  autogeneratedNr           Int               @default(autoincrement())
  ansprechpartnerBetreut    Ansprechpartner[]
  erstellteAnsprechpartner  Ansprechpartner[] @relation("AnsprechpartnerErstelltVon")
  geaenderteAnsprechpartner Ansprechpartner[] @relation("AnsprechpartnerLetzteAenderungVon")
  auftragBetreut            Auftrag[]
  erstellteAuftraege        Auftrag[]         @relation("AuftragErstelltVon")
  geaenderteAuftraege       Auftrag[]         @relation("AuftragLetzteAenderungVon")
  bewerberBetreut           Bewerber[]
  erstellteBewerber         Bewerber[]        @relation("BewerberErstelltVon")
  geaenderteBewerber        Bewerber[]        @relation("BewerberLetzteAenderungVon")
  erstellteDokumente        Dokument[]        @relation("ErstelltVon")
  erstellteSales            Sales[]           @relation("SalesErstelltVon")
  geaenderteSales           Sales[]           @relation("SalesLetzteAenderungVon")
  erstellteTodos            Todo[]            @relation("TodoErstelltVon")
  zustaendigeTodos          Todo[]            @relation("TodoZustaendig")
  unternehmenBetreut        Unternehmen[]
  erstellteUnternehmen      Unternehmen[]     @relation("ErstelltVon")
  geaenderteUnternehmen     Unternehmen[]     @relation("LetzteAenderungVon")
  profilBild                String?           // Hier das neue Feld hinzufügen

  @@schema("public")
}

model Auftrag {
  id                                    String                  @id @default(uuid())
  unternehmenId                         String?
  affiliateId                           String?
  anzahlOffenePositionen                String?
  arbeitszeit                           Arbeitszeit[]
  auftragGeschlossenAm                  DateTime?
  auftragGeschlossenWeil                AuftragGeschlossenWeil?
  besetzungAsap                         Boolean                 @default(false)
  betreuerId                            String?
  einsatzort                            String?
  erfahrungInJobfield                   ErfahrungInJobfield[]
  ergaenzungHomeOffice                  String?
  ergaenzungTeilzeit                    String?
  erstelltAm                            DateTime                @default(now())
  erstelltVonId                         String?
  freitextFuerStellenbezogeneExtras     String?
  gehaltObergrenzeBruttoJahr            Int?
  grundgehaltBruttoJahr                 Int?
  homeOffice                            HomeOffice[]
  jahresbonusBei100ProzentZielerfullung Int?
  job                                   String?
  jobfield                              Jobfield[]
  jobtitel                              Jobtitel[]
  kategorie                             Int?
  letzteAenderungAm                     DateTime?                @updatedAt
  letzteAenderungVonId                  String?
  notizAbsage                           String?
  notizen                               String?
  postleitzahl                          String?
  quelle                                AuftragQuelle?           
  salesId                               String?
  segment                               Segment[]
  spaetestensZuBesetzenBis              DateTime?
  startAb                               DateTime?
  status                                AuftragStatus?           
  stellenbeschreibungId                 String?
  strasse                               String?
  teilzeitStundenWocheMaximum           Int?
  teilzeitStundenWocheMinimum           Int?
  teilzeitTage                          TeilzeitTage[]
  voraussichtlicheVermittlungssumme     Int?
  zielgehaltObergrenze                  Int?
  zielgehaltUntergrenze                 Int?
  autogeneratedNr                       Int                     @default(autoincrement())
  affiliate                             Affiliate?              @relation(fields: [affiliateId], references: [id])
  betreuer                              User?                   @relation(fields: [betreuerId], references: [id])
  erstelltVon                           User?                   @relation("AuftragErstelltVon", fields: [erstelltVonId], references: [id])
  letzteAenderungVon                    User?                   @relation("AuftragLetzteAenderungVon", fields: [letzteAenderungVonId], references: [id])
  sales                                 Sales?                  @relation(fields: [salesId], references: [id])
  stellenbeschreibung                   Stellenbeschreibung?    @relation(fields: [stellenbeschreibungId], references: [id])
  unternehmen                           Unternehmen?             @relation(fields: [unternehmenId], references: [id])
  dokumente                             Dokument[]
  todos                                 Todo[]
  ansprechpartner                       Ansprechpartner[]       @relation("AnsprechpartnerToAuftrag")
  bewerber                              Bewerber[]              @relation("AuftragToBewerber")
  edvKenntnisse                         EdvKenntnisse[]         @relation("AuftragToEdvKenntnisse")
  sprachkenntnisse                      Sprachkenntnisse[]      @relation("AuftragToSprachkenntnisse")
  test_field                            String?  // Füge dies hinzu


  @@schema("public")
}

model Sales {
  id                     String                  @id @default(uuid())
  unternehmenId          String?
  absage                 DateTime?
  ansprechpartnerId      String?
  bewerberstatus         Bewerberstatus?          
  erstelltAm             DateTime?                @default(now())                
  erstelltVonId          String?
  interview1             DateTime?
  interview2             DateTime?
  interview3             DateTime?
  kurzbeschreibungStelle String?
  letzteAenderungAm      DateTime?                @updatedAt
  letzteAenderungVonId   String?
  notizen                String?
  prozessGeschlossenWeil ProzessGeschlossenWeil?
  startdatum             DateTime?
  vertragsgespraech      DateTime?
  vorgestelltAm          DateTime?
  autogeneratedNr        Int                     @default(autoincrement())
  auftraege              Auftrag[]
  dokumente              Dokument[]
  ansprechpartner        Ansprechpartner?        @relation(fields: [ansprechpartnerId], references: [id])
  erstelltVon            User?                   @relation("SalesErstelltVon", fields: [erstelltVonId], references: [id])
  letzteAenderungVon     User?                   @relation("SalesLetzteAenderungVon", fields: [letzteAenderungVonId], references: [id])
  unternehmen            Unternehmen?             @relation(fields: [unternehmenId], references: [id])
  todos                  Todo[]
  bewerber               Bewerber[]              @relation("BewerberToSales")

  @@schema("public")
}

model Ansprechpartner {
  id                   String                    @id @default(uuid())
  email                String?
  anrede               Anrede?                   
  betreuerId           String?
  duAnsprache          Boolean?                  @default(false)
  erstelltAm           DateTime                  @default(now())
  erstelltVonId        String?
  kategorie            AnsprechpartnerKategorie? 
  letzteAenderungAm    DateTime?                 @updatedAt
  letzteAenderungVonId String?
  linkedin             String?
  mobil                String?
  nachname             String?                   @default("")
  notiz                String?
  positionJobtitel     String?
  status               AnsprechpartnerStatus?    @default(unbekannt)
  telefon              String?
  titel                String?
  vorname              String?                   @default("")
  xing                 String?
  autogeneratedNr      Int                       @default(autoincrement())
  betreuer             User?                     @relation(fields: [betreuerId], references: [id])
  erstelltVon          User?                     @relation("AnsprechpartnerErstelltVon", fields: [erstelltVonId], references: [id])
  letzteAenderungVon   User?                     @relation("AnsprechpartnerLetzteAenderungVon", fields: [letzteAenderungVonId], references: [id])
  dokumente            Dokument[]
  sales                Sales[]
  todos                Todo[]
  auftraege            Auftrag[]                 @relation("AnsprechpartnerToAuftrag")
  unternehmen          Unternehmen[]             @relation("AnsprechpartnerToUnternehmen")

  @@schema("public")
}


model EdvKenntnisse {
  id        String     @id @default(uuid())
  name      String     @default("")
  auftraege Auftrag[]  @relation("AuftragToEdvKenntnisse")
  bewerber  Bewerber[] @relation("BewerberToEdvKenntnisse")

  @@schema("public")
}

model Sprachkenntnisse {
  id        String     @id @default(uuid())
  name      String     @default("")
  auftraege Auftrag[]  @relation("AuftragToSprachkenntnisse")
  bewerber  Bewerber[] @relation("BewerberToSprachkenntnisse")

  @@schema("public")
}

model Affiliate {
  id        String     @id @default(uuid())
  auftraege Auftrag[]
  bewerber  Bewerber[]

  @@schema("public")
}

model Stellenbeschreibung {
  id        String    @id @default(uuid())
  auftraege Auftrag[]

  @@schema("public")
}

model Bewerber {
  id                                       String                         @id @default(uuid())
  absageAm                                 DateTime?
  absageNotiz                              String?
  absageWeil                               AbsageWeil?
  adresse                                  String?
  affiliat                                 Boolean?                        @default(false)
  affiliateId                              String?
  ansprache                                Anrede?                         
  arbeitserlaubnisBefristetBis             DateTime?
  arbeitserlaubnisNotwendig                Boolean                        @default(false)
  arbeitserlaubnisUnbefristet              Boolean                        @default(false)
  arbeitszeit                              Arbeitszeit?                  
  auto                                     Boolean?                        
  behinderung                              Boolean?                       
  behinderungsgrad                         String?
  betreuerId                               String?
  beworbenAm                               DateTime?
  du                                       Boolean                        @default(false)
  email                                    String?
  empfohlenVonId                           String?
  erfahrungInJobfield                      ErfahrungInJobfield[]
  ergaenzungHomeOffice                     String?
  erstelltAm                               DateTime                       @default(now())
  erstelltVonId                            String?
  freitextFuerZusatzinfos                  String?
  fuehrerschein                            Boolean?                        
  geburtsdatum                             DateTime?
  gehaltswunschBruttoJahr                  Int?
  handy                                    String?
  homeOffice                               HomeOffice[]
  interview                                DateTime?
  jobfield                                 Jobfield[]
  jobtitelBisherigeErfahrung               Jobtitel[]
  jobtitelWunsch                           Jobtitel[]
  kategorie                                Int?
  letzteAenderungAm                        DateTime?                       @updatedAt
  letzteAenderungVonId                     String?
  linkedin                                 String?
  nachname                                 String                         @default("")
  nichtZuSchonBei                          String?
  oeffentlicheVerkehrsmittel               Boolean?                        
  personalfuehrungExtern                   Int?
  personalfuehrungIntern                   Int?
  personalfuehrungMustHave                 Boolean?                        
  postleitzahl                             String?
  rahmendaten                              String?
  region                                   String?
  regionUmkreisInKm                        Int?
  staatsangehoerigkeit                     String?
  stadt                                    String?
  startdatumVermittlung                    DateTime?
  status                                   BewerberStatus?                 
  teilzeitNotizen                          String?
  teilzeitStundenWoche                     String?
  teilzeitTage                             TeilzeitTage[]
  telefon                                  String?
  telefonGeschaeftlich                     String?
  titel                                    String?
  untergrenzeGehaltBruttoJahr              Int?
  verfuegbarkeitKuendigungsfrist           VerfuegbarkeitKuendigungsfrist? 
  vermittlungssumme                        Int?
  vorherigeAbspracheNotwendig              Boolean                        @default(false)
  vorname                                  String?                        
  wechselMitTeam                           Boolean?                        @default(false)
  wechselmoitivation                       String?
  weitereNotizen                           String?
  xing                                     String?
  autogeneratedNr                          Int                            @default(autoincrement())
  affiliate                                Affiliate?                     @relation(fields: [affiliateId], references: [id])
  betreuer                                 User?                          @relation(fields: [betreuerId], references: [id])
  empfohlenVon                             Bewerber?                      @relation("BewerberEmpfohlen", fields: [empfohlenVonId], references: [id])
  empfohleneBewerber                       Bewerber[]                     @relation("BewerberEmpfohlen")
  erstelltVon                              User?                          @relation("BewerberErstelltVon", fields: [erstelltVonId], references: [id])
  letzteAenderungVon                       User?                          @relation("BewerberLetzteAenderungVon", fields: [letzteAenderungVonId], references: [id])
  dokumente                                Dokument[]
  todos                                    Todo[]
  auftraege                                Auftrag[]                      @relation("AuftragToBewerber")
  edvKenntnisse                            EdvKenntnisse[]                @relation("BewerberToEdvKenntnisse")
  sales                                    Sales[]                        @relation("BewerberToSales")
  sprachkenntnisse                         Sprachkenntnisse[]             @relation("BewerberToSprachkenntnisse")
  stellenausschreibungen                   Stellenausschreibung[]         @relation("BewerberToStellenausschreibung")
  Bewerber_ZusaetzlichWechselndeKollegen_A Bewerber[]                     @relation("ZusaetzlichWechselndeKollegen")
  Bewerber_ZusaetzlichWechselndeKollegen_B Bewerber[]                     @relation("ZusaetzlichWechselndeKollegen")

  @@schema("public")
}

model Stellenausschreibung {
  id       String     @id @default(uuid())
  bewerber Bewerber[] @relation("BewerberToStellenausschreibung")

  @@schema("public")
}

model Dokument {
  id                      Int                @id @default(autoincrement())
  unternehmenId           String?
  ansprechpartnerId       String?
  artKunde                DokumentArtKunde?
  artTOK                  DokumentArtTOK?
  artTalent               DokumentArtTalent?
  auftragId               String?
  bewerberId              String?
  bezeichnung             String             @default("")
  erstellerId             String?
  erstelltAm              DateTime           @default(now())
  individuelleBezeichnung String?
  inhalt                  String?             @default("")
  letzteAenderungAm       DateTime           @updatedAt
  link                    String?
  salesId                 String?
  titel                   String?
  typ                     DokumentTyp?        @default(PDF)
  autogeneratedNr         Int                @default(autoincrement())
  ansprechpartner         Ansprechpartner?   @relation(fields: [ansprechpartnerId], references: [id])
  auftrag                 Auftrag?           @relation(fields: [auftragId], references: [id])
  bewerber                Bewerber?          @relation(fields: [bewerberId], references: [id])
  ersteller               User?              @relation("ErstelltVon", fields: [erstellerId], references: [id])
  sales                   Sales?             @relation(fields: [salesId], references: [id])
  unternehmen             Unternehmen?       @relation(fields: [unternehmenId], references: [id])

  @@schema("public")
}

model Todo {
  id                Int              @id @default(autoincrement())
  titel             String           @default("")
  beschreibung      String?
  faelligAm         DateTime?
  erstelltAm        DateTime         @default(now())
  erstelltVonId     String?
  zustaendigId      String?
  erledigt          Boolean          @default(false)
  erledigtAm        DateTime?
  unternehmenId     String?
  auftragId         String?
  salesId           String?
  ansprechpartnerId String?
  bewerberId        String?
  ansprechpartner   Ansprechpartner? @relation(fields: [ansprechpartnerId], references: [id])
  auftrag           Auftrag?         @relation(fields: [auftragId], references: [id])
  bewerber          Bewerber?        @relation(fields: [bewerberId], references: [id])
  erstelltVon       User?            @relation("TodoErstelltVon", fields: [erstelltVonId], references: [id])
  sales             Sales?           @relation(fields: [salesId], references: [id])
  unternehmen       Unternehmen?     @relation(fields: [unternehmenId], references: [id])
  zustaendig        User?            @relation("TodoZustaendig", fields: [zustaendigId], references: [id])

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String? 
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_challenges {
  id          String      @id @db.Uuid
  factor_id   String      @db.Uuid
  created_at  DateTime    @db.Timestamptz(6)
  verified_at DateTime?   @db.Timestamptz(6)
  ip_address  String      @db.Inet
  mfa_factors mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_factors {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  friendly_name  String?
  factor_type    factor_type
  status         factor_status
  created_at     DateTime         @db.Timestamptz(6)
  updated_at     DateTime         @db.Timestamptz(6)
  secret         String?
  mfa_challenges mfa_challenges[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  profiles                    profiles?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id         String  @id @db.Uuid
  first_name String?
  last_name  String?
  users      users   @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

enum Status {
  inaktiv
  Zielkunde
  pending
  aktiv
  Rahmenvertragspartner
  nicht_kontaktieren

  @@schema("public")
}

enum Standort {
  Zentrale
  Zweigstelle

  @@schema("public")
}

enum Unternehmensverknuepfung {
  Muttergesellschaft
  Tochtergesellschaft
  Schwestergesellschaft

  @@schema("public")
}

enum Anrede {
  Herr
  Frau

  @@schema("public")
}

enum AnsprechpartnerStatus {
  unbekannt
  inKontakt
  nichtKontaktieren
  ausgeschieden

  @@schema("public")
}

enum AnsprechpartnerKategorie {
  Geschaeftsfuehrung
  HRRecruiting
  Entscheider
  TeamAbteilungsleiter
  Mitarbeiter

  @@schema("public")
}

enum AuftragStatus {
  Recherche
  In_Bebtreuung
  Aktiv
  on_hold
  besetzt
  Absage_Kunde
  Absage_TOK

  @@schema("public")
}

enum Jobfield {
  Arbeitnehmerueberlassung
  Personalvermittlung
  HRPersonalabteilung
  FreelanceContracting
  WerkvertraegeDienstvertraege

  @@schema("public")
}

enum ErfahrungInJobfield {
  Quereinsteiger
  Anfaenger0bis1Jahr
  Fortgeschritten1bis3Jahre
  Erfahren3bis5Jahre
  ProfessionalUeber5Jahre

  @@schema("public")
}

enum Jobtitel {
  TeamVertriebsAssistentin
  Mitarbeiterbetreuung
  Lohnabrechnung
  Recruitiung
  Disponent180GradConsultantSales
  Disponent360GradConsultantSales
  KeyAccountManagerin
  Niederlassungsleitung
  Regionalleitung
  TeamFachbereichsleitung
  Geschaeftsfuehrung
  HRAdvisor
  HRPersonalreferentin
  HRBusinesspartnerin
  HRGeneralistin
  HRManagerin
  HRPersonalleitung

  @@schema("public")
}

enum Segment {
  Aviation
  BankingInsurance
  EDVITSoftUndHardware
  Engineering
  Finance
  GesundheitPflegeUndSozialesErziehung
  gewerblich
  kaufmaennisch
  legal
  office
  Studenten
  VerkehrLagerLogistik
  intern
  Gastro

  @@schema("public")
}

enum HomeOffice {
  Prozent100HomeOffice
  Prozent100Office
  MixHybrid

  @@schema("public")
}

enum Arbeitszeit {
  Vollzeit
  Teilzeit
  TeilzeitVormittags
  TeilzeitFlexibel

  @@schema("public")
}

enum TeilzeitTage {
  Montag
  Dienstag
  Mittwoch
  Donnerstag
  Freitag

  @@schema("public")
}

enum AuftragQuelle {
  AuftragPerMailErhalten
  AuftragTelefonischErhalten
  RegelmaessigeAuftragslisteDesKunden
  AuftragTelefonischAkquiriert
  AuftragBeiKundenErhalten

  @@schema("public")
}

enum AuftragGeschlossenWeil {
  KundeHatStelleBesetzt
  KundeHatStelleZurueckgezogen
  TOKHatStelleBesetzt
  TOKHatAuftragAbgelehnt
  KeinFeedbackSonstiges

  @@schema("public")
}

enum Bewerberstatus {
  Idee
  empfohlen
  sollEingeladenWerden
  eingeladen
  interview
  onHold
  eingestellt
  abgesagtKunde
  abgesagtBewerber
  abgesagtTOK

  @@schema("public")
}

enum ProzessGeschlossenWeil {
  durchTOKBesetzt
  vonTOKAbgelehnt
  durchKundenBesetzt
  durchKundenAbgelehnt
  vonKundenZurueckgezogen
  KandidatIstZuTeuer
  KandidatHatAbgelehnt
  KandidatHatNichtUeberzeugt
  KandidatHatAnderenJobAngenommen

  @@schema("public")
}

enum BewerberStatus {
  neu
  aktivMitInterview
  aktivMitInterviewUndProfil
  imProzess
  onHold
  vermitteltImEinsatz
  absageBewerber
  absageTOK
  spaeterAbzusagen
  absageDSGVO

  @@schema("public")
}

enum VerfuegbarkeitKuendigungsfrist {
  abSofort
  kurzfristig2Wochen
  vierWochenZuMonatmitteUndEnde
  einMonatZumMonatsende
  zweiMonateZumMonatsende
  dreiMonateZumMonatsende
  sechsWochenZumMonatsende
  einMonatZumQuartalsende
  sechsWochenZumQuartalsende
  sechsMonateZumQuartalsende

  @@schema("public")
}

enum AbsageWeil {
  bewerberHatNeuenJob
  absageDurchTOK
  nichtMehrErreicht
  absageDSGVO
  bewerberMoechteNichtMehrMitUnsArbeiten
  matchStelleBesetzt

  @@schema("public")
}

enum DokumentTyp {
  PDF
  DOC
  DOCX
  XLS
  XLSX
  PPT
  PPTX
  TXT
  JPG
  PNG

  @@schema("public")
}

enum DokumentArtTalent {
  ANSCHREIBEN
  GESAMTE_BEWERBUNG
  LEBENSLAUF
  SONSTIGE_DOKUMENTE
  ZEUGNISSE
  AUSWEIS_AUFENTHALTSGENEHMIGUNG
  PROFIL_OFFEN
  PROFIL_ANONYM
  BILD

  @@schema("public")
}

enum DokumentArtKunde {
  RAHMENVERTRAG
  MITSCHRIFT_GESPRAECH
  SONSTIGE_DOKUMENTE

  @@schema("public")
}

enum DokumentArtTOK {
  leer

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}